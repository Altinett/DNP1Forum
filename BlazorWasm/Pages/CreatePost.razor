@page "/CreatePost"
@using BlazorWasm.Services
@using System.Security.Claims
@inject IPostService PostService

@inject NavigationManager navMgr

@if (isLoggedIn)
{
    
    <form @onsubmit="Create">
        <h3>Hello @name</h3>
        <br/>
        <div class="create-post-form">
            <h4>Create a post</h4>
            <input placeholder="Title" type="text" @bind="Title"/>
            <textarea placeholder="Body" type="text" @bind="Body"/>
            <input type="submit" class="button" value="Post"/>
        </div>
    </form>
    
    
}
else
{
    <p>You are not logged in.</p>
}


@code {
    
    private string Title;
    private string Body;

    private async Task Create()
    {
        try
        {
            await PostService.CreatePost(Int32.Parse(@id), Title, Body);
            navMgr.NavigateTo("explore");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string? name;
    private string? id;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        
        if (!isLoggedIn) return;
        
        userClaims = user.Claims;
        name = user.Identity!.Name!;
        Claim idClaim = userClaims.FirstOrDefault(c => c.Type == "User ID");
        id = idClaim?.Value;
    }
}





